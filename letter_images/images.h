
// This is an autogenerated file, edit at your own peril.
#ifndef IMAGES_H
#define IMAGES_H
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

// This is a compressed version to save space. 
// Store length of consecuatly same pixel value.
// When rendering we render that many pixels of that color.
struct vlu_seg {
  uint16_t len; // How many consecuetive pixels of ths same color.
  uint8_t vlu;  // What pixel value to render.
};
 
/// An image is a collection of vlu_seg segments.
struct vlu_img {
  const struct vlu_seg* segs; // The segments this image contains
  uint16_t n_segs;      // Number of segments in this image.
};

///Function pointer to a function that send 1 byte to screen
typedef void (*images_send_data)(uint8_t byt);

/// The actual decompress and render function
int images_render(
    const struct vlu_img* img,
    const images_send_data send_fn,
    const uint32_t max_pixels);

extern const struct vlu_img image_M;

extern const struct vlu_img image_Z;

extern const struct vlu_img image_L;

extern const struct vlu_img image_N;

extern const struct vlu_img image_Y;

extern const struct vlu_img image_X;

extern const struct vlu_img image_O;

extern const struct vlu_img image_K;

extern const struct vlu_img image_J;

extern const struct vlu_img image_H;

extern const struct vlu_img image_I;

extern const struct vlu_img image_S;

extern const struct vlu_img image_D;

extern const struct vlu_img image_E;

extern const struct vlu_img image_R;

extern const struct vlu_img image_P;

extern const struct vlu_img image_G;

extern const struct vlu_img image_F;

extern const struct vlu_img image_Q;

extern const struct vlu_img image_B;

extern const struct vlu_img image_U;

extern const struct vlu_img image_T;

extern const struct vlu_img image_C;

extern const struct vlu_img image_A;

extern const struct vlu_img image_V;

extern const struct vlu_img image_W;

extern const struct vlu_img nj_racing;


#ifdef __cplusplus
} // extern "C"
#endif

#endif // IMAGES_H
